@using LiveMetal.Core.Models.Review
@using System.Security.Claims
@model IEnumerable<ReviewViewModel>

@{
    ViewData["Title"] = "All Reviews";
}

<h1>All Reviews</h1>

<div class="container">
    @foreach (var review in Model)
    {
        <div class="card mb-3">
            <div class="card-header">
                <strong>@review.Title</strong> by @review.UserName on @review.IssuedOn
            </div>
            <div class="card-body">
                <p class="card-text">@review.Content</p>
                <p><span class="badge bg-primary">@review.Rating stars</span></p>
                <p class="card-text"><strong>Band:</strong> @review.BandName</p>
                <p class="card-text"><strong>Concert:</strong> @review.ConcertName</p>
            </div>
            <div class="card-footer">
                @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.FindFirst(ClaimTypes.NameIdentifier)?.Value == review.UserId))
                {
                    <a href="@Url.Action("Edit", "Review", new { id = review.ReviewId })" class="btn btn-info">Edit</a>
                    <a href="@Url.Action("Delete", "Review", new { id = review.ReviewId })" class="btn btn-danger">Delete</a>
                }
            </div>
        </div>
    }
    @if (!Model.Any())
    {
        <p>No reviews available.</p>
    }
</div>
